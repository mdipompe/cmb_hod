#Parameters for CAMB
#These defaults are set to match those of CAMB online as of 7/15/15
#MAD Make sure there are spaces before and after the '=' signs!!

#output_root is prefixed to output file names
output_root  =  camb

#What to do
get_scalar_cls  =  T
get_vector_cls = F
get_tensor_cls  =  F
get_transfer  =  T

#if do_lensing then scalar_output_file contains additional columns of l^4 C_l^{pp} and l^3 C_l^{pT}
#where p is the projected potential. Output lensed CMB Culs (without tensors) are in lensed_output_file below.
do_lensing  =  T

# 0: linear, 1: non-linear matter power (HALOFIT), 2: non-linear CMB lensing (HALOFIT), 
# 3: both non-linear matter power and CMB lensing (HALOFIT) 
do_nonlinear = 0

#Maximum multipole and k*eta. 
#  Note that C_ls near l_max are inaccurate (about 5%), go to 50 more than you need
#  Lensed power spectra are computed to l_max_scalar-100 
#  To get accurate lensed BB need to have l_max_scalar>2000, k_eta_max_scalar > 10000
#  To get accurate lensing potential you also need k_eta_max_scalar > 10000
#  Otherwise k_eta_max_scalar=2*l_max_scalar usually suffices, or don't set to use default
l_max_scalar      = 2200
#k_eta_max_scalar  = 4000

#  Tensor settings should be less than or equal to the above
l_max_tensor      = 1500
k_eta_max_tensor  = 3000

#Main cosmological parameters, neutrino masses are assumed degenerate
# If use_phyical set physical densities in baryons, CDM and neutrinos + Omega_k
use_physical  =  F
ombh2          = 0.0226
omch2          = 0.112
omnuh2         = 0.00064
omk            = 0
hubble  =  70.2000

#effective equation of state parameter for dark energy
w              = -1
#constant comoving sound speed of the dark energy (1=quintessence)
cs2_lam        = 1

#varying w is not supported by default, compile with EQUATIONS=equations_ppf to use crossing PPF w-wa model:
#wa             = 0
##if use_tabulated_w read (a,w) from the following user-supplied file instead of above
#use_tabulated_w = F
#wafile = wa.dat

#if use_physical = F set parameters as here
omega_baryon  =  0.0460000
omega_cdm  =  0.229000
omega_lambda  =  0.725000
omega_neutrino = 0

temp_cmb           = 2.7255
helium_fraction    = 0.24

#for share_delta_neff = T, the fractional part of massless_neutrinos gives the change in the effective number 
#(for QED + non-instantaneous decoupling)  i.e. the increase in neutrino temperature,
#so Neff = massless_neutrinos + sum(massive_neutrinos)
#For full neutrino parameter details see http://cosmologist.info/notes/CAMB.pdf
massless_neutrinos = 2.046

#number of distinct mass eigenstates
nu_mass_eigenstates = 1
#array of the integer number of physical neutrinos per eigenstate, e.g. massive_neutrinos = 2 1
massive_neutrinos  = 1
#specify whether all neutrinos should have the same temperature, specified from fractional part of massless_neutrinos
share_delta_neff = T
#nu_mass_fractions specifies how Omeganu_h2 is shared between the eigenstates
#i.e. to indirectly specify the mass of each state; e.g. nu_mass_factions= 0.75 0.25
nu_mass_fractions = 1
#if share_delta_neff = F, specify explicitly the degeneracy for each state (e.g. for sterile with different temperature to active)
#(massless_neutrinos must be set to degeneracy for massless, i.e. massless_neutrinos does then not include Deleta_Neff from massive)
#if share_delta_neff=T then degeneracies is not given and set internally
#e.g. for massive_neutrinos = 2 1, this gives equal temperature to 4 neutrinos: nu_mass_degeneracies = 2.030 1.015, massless_neutrinos = 1.015
nu_mass_degeneracies = 

#Initial power spectrum, amplitude, spectral index and running. Pivot k in Mpc^{-1}.
initial_power_num         = 1
pivot_scalar              = 0.005
pivot_tensor              = 0.005
scalar_amp(1)             = 2.45183e-9
scalar_spectral_index(1)  = 0.96
scalar_nrun(1)            = 0
scalar_nrunrun(1)         = 0
tensor_spectral_index(1)  = 0
tensor_nrun(1)            = 0
#Three parameterizations (1,2,3) for tensors, see http://cosmologist.info/notes/CAMB.pdf
tensor_parameterization   = 1
#ratio is that of the initial tens/scal power spectrum amplitudes, depending on parameterization
#for tensor_parameterization == 1, P_T = initial_ratio*scalar_amp*(k/pivot_tensor)^tensor_spectral_index
#for tensor_parameterization == 2, P_T = initial_ratio*P_s(pivot_tensor)*(k/pivot_tensor)^tensor_spectral_index
#Note that for general pivot scales and indices, tensor_parameterization==2 as P_T depending on n_s
initial_ratio(1)          = 1
#tensor_amp is used instead if tensor_parameterization == 3, P_T = tensor_amp *(k/pivot_tensor)^tensor_spectral_index
tensor_amp(1)            = 4e-10

#note vector modes use the scalar settings above


#Reionization, ignored unless reionization = T, re_redshift measures where x_e=0.5
reionization         = T

re_use_optical_depth = F
re_optical_depth     = 0.09
#If re_use_optical_depth = F then use following, otherwise ignored
re_redshift          = 11
#width of reionization transition. CMBFAST model was similar to re_delta_redshift~0.5.
re_delta_redshift    = 0.5
#re_ionization_frac=-1 sets to become fully ionized using YE to get helium contribution
#Otherwise x_e varies from 0 to re_ionization_frac
re_ionization_frac   = 1


#RECFAST 1.5.x recombination parameters;
RECFAST_fudge = 1.14
RECFAST_fudge_He = 0.86
RECFAST_Heswitch = 6
RECFAST_Hswitch  = T

# CosmoMC parameters - compile with RECOMBINATION=cosmorec and link to CosmoMC to use these
#
# cosmorec_runmode== 0: CosmoMC run with diffusion
#                    1: CosmoMC run without diffusion
#                    2: RECFAST++ run (equivalent of the original RECFAST version)
#                    3: RECFAST++ run with correction function of Calumba & Thomas, 2010
#
# For 'cosmorec_accuracy' and 'cosmorec_fdm' see CosmoMC for explanation
#---------------------------------------------------------------------------------------
#cosmorec_runmode        = 0
#cosmorec_accuracy       = 0
#cosmorec_fdm            = 0

#Initial scalar perturbation mode (adiabatic=1, CDM iso=2, Baryon iso=3, 
# neutrino density iso =4, neutrino velocity iso = 5) 
initial_condition   = 1
#If above is zero, use modes in the following (totally correlated) proportions
#Note: we assume all modes have the same initial power spectrum
initial_vector = -1 0 0 0 0

#For vector modes: 0 for regular (neutrino vorticity mode), 1 for magnetic
vector_mode = 0

#Normalization
COBE_normalize = F
##CMB_outputscale scales the output Culs
#To get MuK^2 set realistic initial amplitude (e.g. scalar_amp(1) = 2.3e-9 above) and
#otherwise for dimensionless transfer functions set scalar_amp(1)=1 and use
#CMB_outputscale = 1
CMB_outputscale = 7.42835025e12 

#Transfer function settings, transfer_kmax=0.5 is enough for sigma_8
#transfer_k_per_logint=0 sets sensible non-even sampling; 
#transfer_k_per_logint=5 samples fixed spacing in log-k
#transfer_interp_matterpower =T produces matter power in regular interpolated grid in log k; 
# use transfer_interp_matterpower =F to output calculated values (e.g. for later interpolation)
transfer_high_precision = F
transfer_kmax  =  50
transfer_k_per_logint   = 5
transfer_num_redshifts  =  100
transfer_interp_matterpower = T
transfer_redshift(1)    = 9.99500
transfer_redshift(2)    = 9.25638
transfer_redshift(3)    = 8.57235
transfer_redshift(4)    = 7.93886
transfer_redshift(5)    = 7.35219
transfer_redshift(6)    = 6.80887
transfer_redshift(7)    = 6.30570
transfer_redshift(8)    = 5.83972
transfer_redshift(9)    = 5.40817
transfer_redshift(10)    = 5.00851
transfer_redshift(11)    = 4.63839
transfer_redshift(12)    = 4.29562
transfer_redshift(13)    = 3.97818
transfer_redshift(14)    = 3.68419
transfer_redshift(15)    = 3.41194
transfer_redshift(16)    = 3.15980
transfer_redshift(17)    = 2.92630
transfer_redshift(18)    = 2.71004
transfer_redshift(19)    = 2.50978
transfer_redshift(20)    = 2.32431
transfer_redshift(21)    = 2.15254
transfer_redshift(22)    = 1.99347
transfer_redshift(23)    = 1.84616
transfer_redshift(24)    = 1.70973
transfer_redshift(25)    = 1.58338
transfer_redshift(26)    = 1.46637
transfer_redshift(27)    = 1.35801
transfer_redshift(28)    = 1.25765
transfer_redshift(29)    = 1.16471
transfer_redshift(30)    = 1.07864
transfer_redshift(31)    = 0.998933
transfer_redshift(32)    = 0.925113
transfer_redshift(33)    = 0.856749
transfer_redshift(34)    = 0.793436
transfer_redshift(35)    = 0.734802
transfer_redshift(36)    = 0.680501
transfer_redshift(37)    = 0.630213
transfer_redshift(38)    = 0.583641
transfer_redshift(39)    = 0.540510
transfer_redshift(40)    = 0.500567
transfer_redshift(41)    = 0.463576
transfer_redshift(42)    = 0.429318
transfer_redshift(43)    = 0.397592
transfer_redshift(44)    = 0.368211
transfer_redshift(45)    = 0.341000
transfer_redshift(46)    = 0.315801
transfer_redshift(47)    = 0.292464
transfer_redshift(48)    = 0.270851
transfer_redshift(49)    = 0.250835
transfer_redshift(50)    = 0.232299
transfer_redshift(51)    = 0.215132
transfer_redshift(52)    = 0.199234
transfer_redshift(53)    = 0.184511
transfer_redshift(54)    = 0.170876
transfer_redshift(55)    = 0.158248
transfer_redshift(56)    = 0.146554
transfer_redshift(57)    = 0.135724
transfer_redshift(58)    = 0.125694
transfer_redshift(59)    = 0.116405
transfer_redshift(60)    = 0.107803
transfer_redshift(61)    = 0.0998367
transfer_redshift(62)    = 0.0924589
transfer_redshift(63)    = 0.0856263
transfer_redshift(64)    = 0.0792986
transfer_redshift(65)    = 0.0734385
transfer_redshift(66)    = 0.0680115
transfer_redshift(67)    = 0.0629856
transfer_redshift(68)    = 0.0583310
transfer_redshift(69)    = 0.0540204
transfer_redshift(70)    = 0.0500284
transfer_redshift(71)    = 0.0463313
transfer_redshift(72)    = 0.0429075
transfer_redshift(73)    = 0.0397367
transfer_redshift(74)    = 0.0368002
transfer_redshift(75)    = 0.0340807
transfer_redshift(76)    = 0.0315622
transfer_redshift(77)    = 0.0292298
transfer_redshift(78)    = 0.0270697
transfer_redshift(79)    = 0.0250693
transfer_redshift(80)    = 0.0232167
transfer_redshift(81)    = 0.0215010
transfer_redshift(82)    = 0.0199121
transfer_redshift(83)    = 0.0184407
transfer_redshift(84)    = 0.0170779
transfer_redshift(85)    = 0.0158159
transfer_redshift(86)    = 0.0146471
transfer_redshift(87)    = 0.0135647
transfer_redshift(88)    = 0.0125623
transfer_redshift(89)    = 0.0116339
transfer_redshift(90)    = 0.0107742
transfer_redshift(91)    = 0.00997801
transfer_redshift(92)    = 0.00924065
transfer_redshift(93)    = 0.00855778
transfer_redshift(94)    = 0.00792536
transfer_redshift(95)    = 0.00733969
transfer_redshift(96)    = 0.00679730
transfer_redshift(97)    = 0.00629499
transfer_redshift(98)    = 0.00582979
transfer_redshift(99)    = 0.00539898
transfer_redshift(100)    = 0.00500000
transfer_filename(1)    = transfer_9.99500.dat
transfer_filename(2)    = transfer_9.25638.dat
transfer_filename(3)    = transfer_8.57235.dat
transfer_filename(4)    = transfer_7.93886.dat
transfer_filename(5)    = transfer_7.35219.dat
transfer_filename(6)    = transfer_6.80887.dat
transfer_filename(7)    = transfer_6.30570.dat
transfer_filename(8)    = transfer_5.83972.dat
transfer_filename(9)    = transfer_5.40817.dat
transfer_filename(10)    = transfer_5.00851.dat
transfer_filename(11)    = transfer_4.63839.dat
transfer_filename(12)    = transfer_4.29562.dat
transfer_filename(13)    = transfer_3.97818.dat
transfer_filename(14)    = transfer_3.68419.dat
transfer_filename(15)    = transfer_3.41194.dat
transfer_filename(16)    = transfer_3.15980.dat
transfer_filename(17)    = transfer_2.92630.dat
transfer_filename(18)    = transfer_2.71004.dat
transfer_filename(19)    = transfer_2.50978.dat
transfer_filename(20)    = transfer_2.32431.dat
transfer_filename(21)    = transfer_2.15254.dat
transfer_filename(22)    = transfer_1.99347.dat
transfer_filename(23)    = transfer_1.84616.dat
transfer_filename(24)    = transfer_1.70973.dat
transfer_filename(25)    = transfer_1.58338.dat
transfer_filename(26)    = transfer_1.46637.dat
transfer_filename(27)    = transfer_1.35801.dat
transfer_filename(28)    = transfer_1.25765.dat
transfer_filename(29)    = transfer_1.16471.dat
transfer_filename(30)    = transfer_1.07864.dat
transfer_filename(31)    = transfer_0.998933.dat
transfer_filename(32)    = transfer_0.925113.dat
transfer_filename(33)    = transfer_0.856749.dat
transfer_filename(34)    = transfer_0.793436.dat
transfer_filename(35)    = transfer_0.734802.dat
transfer_filename(36)    = transfer_0.680501.dat
transfer_filename(37)    = transfer_0.630213.dat
transfer_filename(38)    = transfer_0.583641.dat
transfer_filename(39)    = transfer_0.540510.dat
transfer_filename(40)    = transfer_0.500567.dat
transfer_filename(41)    = transfer_0.463576.dat
transfer_filename(42)    = transfer_0.429318.dat
transfer_filename(43)    = transfer_0.397592.dat
transfer_filename(44)    = transfer_0.368211.dat
transfer_filename(45)    = transfer_0.341000.dat
transfer_filename(46)    = transfer_0.315801.dat
transfer_filename(47)    = transfer_0.292464.dat
transfer_filename(48)    = transfer_0.270851.dat
transfer_filename(49)    = transfer_0.250835.dat
transfer_filename(50)    = transfer_0.232299.dat
transfer_filename(51)    = transfer_0.215132.dat
transfer_filename(52)    = transfer_0.199234.dat
transfer_filename(53)    = transfer_0.184511.dat
transfer_filename(54)    = transfer_0.170876.dat
transfer_filename(55)    = transfer_0.158248.dat
transfer_filename(56)    = transfer_0.146554.dat
transfer_filename(57)    = transfer_0.135724.dat
transfer_filename(58)    = transfer_0.125694.dat
transfer_filename(59)    = transfer_0.116405.dat
transfer_filename(60)    = transfer_0.107803.dat
transfer_filename(61)    = transfer_0.0998367.dat
transfer_filename(62)    = transfer_0.0924589.dat
transfer_filename(63)    = transfer_0.0856263.dat
transfer_filename(64)    = transfer_0.0792986.dat
transfer_filename(65)    = transfer_0.0734385.dat
transfer_filename(66)    = transfer_0.0680115.dat
transfer_filename(67)    = transfer_0.0629856.dat
transfer_filename(68)    = transfer_0.0583310.dat
transfer_filename(69)    = transfer_0.0540204.dat
transfer_filename(70)    = transfer_0.0500284.dat
transfer_filename(71)    = transfer_0.0463313.dat
transfer_filename(72)    = transfer_0.0429075.dat
transfer_filename(73)    = transfer_0.0397367.dat
transfer_filename(74)    = transfer_0.0368002.dat
transfer_filename(75)    = transfer_0.0340807.dat
transfer_filename(76)    = transfer_0.0315622.dat
transfer_filename(77)    = transfer_0.0292298.dat
transfer_filename(78)    = transfer_0.0270697.dat
transfer_filename(79)    = transfer_0.0250693.dat
transfer_filename(80)    = transfer_0.0232167.dat
transfer_filename(81)    = transfer_0.0215010.dat
transfer_filename(82)    = transfer_0.0199121.dat
transfer_filename(83)    = transfer_0.0184407.dat
transfer_filename(84)    = transfer_0.0170779.dat
transfer_filename(85)    = transfer_0.0158159.dat
transfer_filename(86)    = transfer_0.0146471.dat
transfer_filename(87)    = transfer_0.0135647.dat
transfer_filename(88)    = transfer_0.0125623.dat
transfer_filename(89)    = transfer_0.0116339.dat
transfer_filename(90)    = transfer_0.0107742.dat
transfer_filename(91)    = transfer_0.00997801.dat
transfer_filename(92)    = transfer_0.00924065.dat
transfer_filename(93)    = transfer_0.00855778.dat
transfer_filename(94)    = transfer_0.00792536.dat
transfer_filename(95)    = transfer_0.00733969.dat
transfer_filename(96)    = transfer_0.00679730.dat
transfer_filename(97)    = transfer_0.00629499.dat
transfer_filename(98)    = transfer_0.00582979.dat
transfer_filename(99)    = transfer_0.00539898.dat
transfer_filename(100)    = transfer_0.00500000.dat
#Matter power spectrum output against k/h in units of h^{-3} Mpc^3
transfer_matterpower(1)    = matterpower_9.99500.dat
transfer_matterpower(2)    = matterpower_9.25638.dat
transfer_matterpower(3)    = matterpower_8.57235.dat
transfer_matterpower(4)    = matterpower_7.93886.dat
transfer_matterpower(5)    = matterpower_7.35219.dat
transfer_matterpower(6)    = matterpower_6.80887.dat
transfer_matterpower(7)    = matterpower_6.30570.dat
transfer_matterpower(8)    = matterpower_5.83972.dat
transfer_matterpower(9)    = matterpower_5.40817.dat
transfer_matterpower(10)    = matterpower_5.00851.dat
transfer_matterpower(11)    = matterpower_4.63839.dat
transfer_matterpower(12)    = matterpower_4.29562.dat
transfer_matterpower(13)    = matterpower_3.97818.dat
transfer_matterpower(14)    = matterpower_3.68419.dat
transfer_matterpower(15)    = matterpower_3.41194.dat
transfer_matterpower(16)    = matterpower_3.15980.dat
transfer_matterpower(17)    = matterpower_2.92630.dat
transfer_matterpower(18)    = matterpower_2.71004.dat
transfer_matterpower(19)    = matterpower_2.50978.dat
transfer_matterpower(20)    = matterpower_2.32431.dat
transfer_matterpower(21)    = matterpower_2.15254.dat
transfer_matterpower(22)    = matterpower_1.99347.dat
transfer_matterpower(23)    = matterpower_1.84616.dat
transfer_matterpower(24)    = matterpower_1.70973.dat
transfer_matterpower(25)    = matterpower_1.58338.dat
transfer_matterpower(26)    = matterpower_1.46637.dat
transfer_matterpower(27)    = matterpower_1.35801.dat
transfer_matterpower(28)    = matterpower_1.25765.dat
transfer_matterpower(29)    = matterpower_1.16471.dat
transfer_matterpower(30)    = matterpower_1.07864.dat
transfer_matterpower(31)    = matterpower_0.998933.dat
transfer_matterpower(32)    = matterpower_0.925113.dat
transfer_matterpower(33)    = matterpower_0.856749.dat
transfer_matterpower(34)    = matterpower_0.793436.dat
transfer_matterpower(35)    = matterpower_0.734802.dat
transfer_matterpower(36)    = matterpower_0.680501.dat
transfer_matterpower(37)    = matterpower_0.630213.dat
transfer_matterpower(38)    = matterpower_0.583641.dat
transfer_matterpower(39)    = matterpower_0.540510.dat
transfer_matterpower(40)    = matterpower_0.500567.dat
transfer_matterpower(41)    = matterpower_0.463576.dat
transfer_matterpower(42)    = matterpower_0.429318.dat
transfer_matterpower(43)    = matterpower_0.397592.dat
transfer_matterpower(44)    = matterpower_0.368211.dat
transfer_matterpower(45)    = matterpower_0.341000.dat
transfer_matterpower(46)    = matterpower_0.315801.dat
transfer_matterpower(47)    = matterpower_0.292464.dat
transfer_matterpower(48)    = matterpower_0.270851.dat
transfer_matterpower(49)    = matterpower_0.250835.dat
transfer_matterpower(50)    = matterpower_0.232299.dat
transfer_matterpower(51)    = matterpower_0.215132.dat
transfer_matterpower(52)    = matterpower_0.199234.dat
transfer_matterpower(53)    = matterpower_0.184511.dat
transfer_matterpower(54)    = matterpower_0.170876.dat
transfer_matterpower(55)    = matterpower_0.158248.dat
transfer_matterpower(56)    = matterpower_0.146554.dat
transfer_matterpower(57)    = matterpower_0.135724.dat
transfer_matterpower(58)    = matterpower_0.125694.dat
transfer_matterpower(59)    = matterpower_0.116405.dat
transfer_matterpower(60)    = matterpower_0.107803.dat
transfer_matterpower(61)    = matterpower_0.0998367.dat
transfer_matterpower(62)    = matterpower_0.0924589.dat
transfer_matterpower(63)    = matterpower_0.0856263.dat
transfer_matterpower(64)    = matterpower_0.0792986.dat
transfer_matterpower(65)    = matterpower_0.0734385.dat
transfer_matterpower(66)    = matterpower_0.0680115.dat
transfer_matterpower(67)    = matterpower_0.0629856.dat
transfer_matterpower(68)    = matterpower_0.0583310.dat
transfer_matterpower(69)    = matterpower_0.0540204.dat
transfer_matterpower(70)    = matterpower_0.0500284.dat
transfer_matterpower(71)    = matterpower_0.0463313.dat
transfer_matterpower(72)    = matterpower_0.0429075.dat
transfer_matterpower(73)    = matterpower_0.0397367.dat
transfer_matterpower(74)    = matterpower_0.0368002.dat
transfer_matterpower(75)    = matterpower_0.0340807.dat
transfer_matterpower(76)    = matterpower_0.0315622.dat
transfer_matterpower(77)    = matterpower_0.0292298.dat
transfer_matterpower(78)    = matterpower_0.0270697.dat
transfer_matterpower(79)    = matterpower_0.0250693.dat
transfer_matterpower(80)    = matterpower_0.0232167.dat
transfer_matterpower(81)    = matterpower_0.0215010.dat
transfer_matterpower(82)    = matterpower_0.0199121.dat
transfer_matterpower(83)    = matterpower_0.0184407.dat
transfer_matterpower(84)    = matterpower_0.0170779.dat
transfer_matterpower(85)    = matterpower_0.0158159.dat
transfer_matterpower(86)    = matterpower_0.0146471.dat
transfer_matterpower(87)    = matterpower_0.0135647.dat
transfer_matterpower(88)    = matterpower_0.0125623.dat
transfer_matterpower(89)    = matterpower_0.0116339.dat
transfer_matterpower(90)    = matterpower_0.0107742.dat
transfer_matterpower(91)    = matterpower_0.00997801.dat
transfer_matterpower(92)    = matterpower_0.00924065.dat
transfer_matterpower(93)    = matterpower_0.00855778.dat
transfer_matterpower(94)    = matterpower_0.00792536.dat
transfer_matterpower(95)    = matterpower_0.00733969.dat
transfer_matterpower(96)    = matterpower_0.00679730.dat
transfer_matterpower(97)    = matterpower_0.00629499.dat
transfer_matterpower(98)    = matterpower_0.00582979.dat
transfer_matterpower(99)    = matterpower_0.00539898.dat
transfer_matterpower(100)    = matterpower_0.00500000.dat

#which variable to use for defining the matter power spectrum and sigma8
#main choices are 2: CDM, 7: CDM+baryon+neutrino, 8: CDM+baryon, 9: CDM+baryon+neutrino+de perts
transfer_power_var = 7

#Output files not produced if blank. make camb_fits to use the FITS setting.
scalar_output_file = scalCls.dat
vector_output_file = vecCls.dat
tensor_output_file = tensCls.dat
total_output_file  = totCls.dat
lensed_output_file = lensedCls.dat
lensed_total_output_file  = lensedtotCls.dat
lens_potential_output_file = lenspotentialCls.dat
FITS_filename      = scalCls.fits

#Bispectrum parameters if required; primordial is currently only local model (fnl=1)
#lensing is fairly quick, primordial takes several minutes on quad core
do_lensing_bispectrum = F
do_primordial_bispectrum = F

#1 for just temperature, 2 with E
bispectrum_nfields = 1
#set slice non-zero to output slice b_{bispectrum_slice_base_L L L+delta}
bispectrum_slice_base_L = 0
bispectrum_ndelta = 3
bispectrum_delta(1) = 0
bispectrum_delta(2) = 2
bispectrum_delta(3) = 4
#bispectrum_do_fisher estimates errors and correlations between bispectra
#note you need to compile with LAPACK and FISHER defined to use get the Fisher info
bispectrum_do_fisher = F
#Noise is in muK^2, e.g. 2e-4 roughly for Planck temperature
bispectrum_fisher_noise = 0
bispectrum_fisher_noise_pol = 0
bispectrum_fisher_fwhm_arcmin = 7
#Filename if you want to write full reduced bispectrum (at sampled values of l_1)
bispectrum_full_output_file =
bispectrum_full_output_sparse = F
#Export alpha_l(r), beta_l(r) for local non-Gaussianity
bispectrum_export_alpha_beta = F

##Optional parameters to control the computation speed,accuracy and feedback

#If feedback_level > 0 print out useful information computed about the model
feedback_level = 1

#write out various derived parameters
derived_parameters = T

# 1: curved correlation function, 2: flat correlation function, 3: inaccurate harmonic method
lensing_method = 1
accurate_BB = F


#massive_nu_approx: 0 - integrate distribution function
#                   1 - switch to series in velocity weight once non-relativistic
massive_nu_approx = 1

#Whether you are bothered about polarization. 
accurate_polarization   = T

#Whether you are bothered about percent accuracy on EE from reionization
accurate_reionization   = T

#whether or not to include neutrinos in the tensor evolution equations
do_tensor_neutrinos     = F

#Whether to turn off small-scale late time radiation hierarchies (save time,v. accurate)
do_late_rad_truncation   = T

#Which version of Halofit approximation to use (default currently Takahashi):
#1. original, 2. Bird et al. update, 3. (1) plus fudge from http://www.roe.ac.uk/~jap/haloes/, 4. Takahashi
halofit_version = 4

#Computation parameters
#if number_of_threads=0 assigned automatically
number_of_threads       = 0

#Default scalar accuracy is about 0.3% (except lensed BB) if high_accuracy_default=F
#If high_accuracy_default=T the default target accuracy is 0.1% at L>600 (with boost parameter=1 below)
#Try accuracy_boost=2, l_accuracy_boost=2 if you want to check stability/even higher accuracy
#Note increasing accuracy_boost parameters is very inefficient if you want higher accuracy,
#but high_accuracy_default is efficient 

high_accuracy_default = T

#Increase accuracy_boost to decrease time steps, use more k values,  etc.
#Decrease to speed up at cost of worse accuracy. Suggest 0.8 to 3.
accuracy_boost          = 1

#Larger to keep more terms in the hierarchy evolution. 
l_accuracy_boost        = 1

#Increase to use more C_l values for interpolation.
#Increasing a bit will improve the polarization accuracy at l up to 200 -
#interpolation errors may be up to 3%
#Decrease to speed up non-flat models a bit
l_sample_boost          = 1

